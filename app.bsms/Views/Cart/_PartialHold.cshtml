@model app.bsms.Models.Sales.Cart

@using (Html.BeginForm("Hold", "Cart", FormMethod.Post, new { name = "frmHold", id = "frmHold", role = "form" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.Raw(@TempData["PopMessage"])
    @Html.HiddenFor(m => m.cart.siteCode)
    @Html.HiddenFor(m => m.cartDetails.itemCode)
    @Html.HiddenFor(m => m.cartDetails.itemName)
    @Html.HiddenFor(m => m.cartDetails.itemQty)
    <div class="modal-body">
        <div class="form-group">
            <div class="custom-control custom-checkbox custom-control-inline mt-5">
                @Html.CheckBoxFor(m => m.cartDetails.isHoldItem, new { @class = "custom-control-input" })&nbsp;
                @Html.LabelFor(m => m.cartDetails.isHoldItem, new { @class = "custom-control-label" })
            </div>
            @Html.ValidationMessageFor(m => m.cartDetails.isHoldItem)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.cartDetails.holdItemQty)
            @Html.TextBoxFor(m => m.cartDetails.holdItemQty, new { @class = "form-control form-control-lg" })
            @Html.ValidationMessageFor(m => m.cartDetails.holdItemQty)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.cartDetails.holdItemType)
            @Html.DropDownListFor(m => m.cartDetails.holdItemType, new SelectList(Model.lstHoldReasons, "itemCode", "itemDesc"), new { @class = "custom-select form-control-lg" })
            @Html.ValidationMessageFor(m => m.cartDetails.holdItemType)
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-flat btn-lg" data-dismiss="modal" data-mode="cancel"><i class="fa fa-close"></i>&nbsp;@Resources.Resources.Cancel</button>
        <button type="submit" class="btn btn-primary btn-lg"><i class="fa fa-check"></i>&nbsp;@Resources.Resources.Save</button>
    </div>
}